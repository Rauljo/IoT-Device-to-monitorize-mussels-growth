[
    {
        "id": "b0447472b354847b",
        "type": "tab",
        "label": "Flujo 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cb7ccda3b40f342f",
        "type": "mqtt in",
        "z": "b0447472b354847b",
        "name": "",
        "topic": "v3/prueba-bateas@ttn/devices/batea-device/up",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6adb9f429894d294",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "2d255ddaf40c580f",
                "7c0fa39853f94f83",
                "1dcb7bfb5d1bc6c6"
            ]
        ]
    },
    {
        "id": "30ceb6b2d07f3b98",
        "type": "debug",
        "z": "b0447472b354847b",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 200,
        "wires": []
    },
    {
        "id": "2d255ddaf40c580f",
        "type": "function",
        "z": "b0447472b354847b",
        "name": "extraer distancia",
        "func": "const payload = msg.payload;\n\nconst dev_id = payload.end_device_ids.device_id;\nconst data = payload.uplink_message.decoded_payload;\nconst timestamp = new Date(payload.uplink_message.received_at).getTime() * 1e6;  // nanosegundos\n\nmsg.payload = [{\n    distance_cm: parseFloat(data.distancia_cm),\n    timestamp: timestamp\n},\n{\n    device: dev_id\n}]\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 320,
        "wires": [
            [
                "30ceb6b2d07f3b98",
                "94df8fa535d29b04"
            ]
        ]
    },
    {
        "id": "94df8fa535d29b04",
        "type": "influxdb out",
        "z": "b0447472b354847b",
        "influxdb": "fd9ea7b01850d156",
        "name": "",
        "measurement": "distance_readings",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1020,
        "y": 320,
        "wires": []
    },
    {
        "id": "7c0fa39853f94f83",
        "type": "function",
        "z": "b0447472b354847b",
        "name": "extraer temperatura",
        "func": "const payload = msg.payload;\n\nconst dev_id = payload.end_device_ids.device_id;\nconst data = payload.uplink_message.decoded_payload;\nconst timestamp = new Date(payload.uplink_message.received_at).getTime() * 1e6;  // nanosegundos\n\nmsg.payload = [{\n    temperature_c: parseFloat(data.temperatura_c),\n    timestamp: timestamp\n},\n{\n    device: dev_id\n}]\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 400,
        "wires": [
            [
                "5d3908176df2c18d",
                "73357234fe452a4f"
            ]
        ]
    },
    {
        "id": "1dcb7bfb5d1bc6c6",
        "type": "function",
        "z": "b0447472b354847b",
        "name": "extraer humedad",
        "func": "const payload = msg.payload;\n\nconst dev_id = payload.end_device_ids.device_id;\nconst data = payload.uplink_message.decoded_payload;\nconst timestamp = new Date(payload.uplink_message.received_at).getTime() * 1e6;  // nanosegundos\n\nmsg.payload = [{\n    humidity_pct: parseFloat(data.humedad_pct),\n    timestamp: timestamp\n},\n{\n    device: dev_id\n}]\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 500,
        "wires": [
            [
                "e6960e766bd2fee0",
                "630332909f998963"
            ]
        ]
    },
    {
        "id": "5d3908176df2c18d",
        "type": "debug",
        "z": "b0447472b354847b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 380,
        "wires": []
    },
    {
        "id": "e6960e766bd2fee0",
        "type": "debug",
        "z": "b0447472b354847b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 480,
        "wires": []
    },
    {
        "id": "73357234fe452a4f",
        "type": "influxdb out",
        "z": "b0447472b354847b",
        "influxdb": "fd9ea7b01850d156",
        "name": "",
        "measurement": "temperature_readings",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "630332909f998963",
        "type": "influxdb out",
        "z": "b0447472b354847b",
        "influxdb": "fd9ea7b01850d156",
        "name": "",
        "measurement": "humidity_readings",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 960,
        "y": 600,
        "wires": []
    },
    {
        "id": "6adb9f429894d294",
        "type": "mqtt-broker",
        "name": "TTN",
        "broker": "eu1.cloud.thethings.network",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fd9ea7b01850d156",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "ttn_data",
        "name": "Localhost",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    }
]